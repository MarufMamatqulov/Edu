package com.example.course.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class QuestionAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQuestionAllPropertiesEquals(Question expected, Question actual) {
        assertQuestionAutoGeneratedPropertiesEquals(expected, actual);
        assertQuestionAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQuestionAllUpdatablePropertiesEquals(Question expected, Question actual) {
        assertQuestionUpdatableFieldsEquals(expected, actual);
        assertQuestionUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQuestionAutoGeneratedPropertiesEquals(Question expected, Question actual) {
        assertThat(actual)
            .as("Verify Question auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQuestionUpdatableFieldsEquals(Question expected, Question actual) {
        assertThat(actual)
            .as("Verify Question relevant properties")
            .satisfies(a -> assertThat(a.getText()).as("check text").isEqualTo(expected.getText()))
            .satisfies(a -> assertThat(a.getType()).as("check type").isEqualTo(expected.getType()))
            .satisfies(a -> assertThat(a.getOptions()).as("check options").isEqualTo(expected.getOptions()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQuestionUpdatableRelationshipsEquals(Question expected, Question actual) {
        assertThat(actual)
            .as("Verify Question relationships")
            .satisfies(a -> assertThat(a.getCourseItem()).as("check courseItem").isEqualTo(expected.getCourseItem()));
    }
}
