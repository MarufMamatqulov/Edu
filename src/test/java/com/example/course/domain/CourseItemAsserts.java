package com.example.course.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CourseItemAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCourseItemAllPropertiesEquals(CourseItem expected, CourseItem actual) {
        assertCourseItemAutoGeneratedPropertiesEquals(expected, actual);
        assertCourseItemAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCourseItemAllUpdatablePropertiesEquals(CourseItem expected, CourseItem actual) {
        assertCourseItemUpdatableFieldsEquals(expected, actual);
        assertCourseItemUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCourseItemAutoGeneratedPropertiesEquals(CourseItem expected, CourseItem actual) {
        assertThat(actual)
            .as("Verify CourseItem auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCourseItemUpdatableFieldsEquals(CourseItem expected, CourseItem actual) {
        assertThat(actual)
            .as("Verify CourseItem relevant properties")
            .satisfies(a -> assertThat(a.getTitle()).as("check title").isEqualTo(expected.getTitle()))
            .satisfies(a -> assertThat(a.getItemType()).as("check itemType").isEqualTo(expected.getItemType()))
            .satisfies(a -> assertThat(a.getContentType()).as("check contentType").isEqualTo(expected.getContentType()))
            .satisfies(a -> assertThat(a.getContent()).as("check content").isEqualTo(expected.getContent()))
            .satisfies(a -> assertThat(a.getPassingScore()).as("check passingScore").isEqualTo(expected.getPassingScore()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCourseItemUpdatableRelationshipsEquals(CourseItem expected, CourseItem actual) {
        assertThat(actual)
            .as("Verify CourseItem relationships")
            .satisfies(a -> assertThat(a.getCourse()).as("check course").isEqualTo(expected.getCourse()));
    }
}
