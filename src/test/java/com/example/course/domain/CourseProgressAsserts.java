package com.example.course.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CourseProgressAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCourseProgressAllPropertiesEquals(CourseProgress expected, CourseProgress actual) {
        assertCourseProgressAutoGeneratedPropertiesEquals(expected, actual);
        assertCourseProgressAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCourseProgressAllUpdatablePropertiesEquals(CourseProgress expected, CourseProgress actual) {
        assertCourseProgressUpdatableFieldsEquals(expected, actual);
        assertCourseProgressUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCourseProgressAutoGeneratedPropertiesEquals(CourseProgress expected, CourseProgress actual) {
        assertThat(actual)
            .as("Verify CourseProgress auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCourseProgressUpdatableFieldsEquals(CourseProgress expected, CourseProgress actual) {
        assertThat(actual)
            .as("Verify CourseProgress relevant properties")
            .satisfies(a -> assertThat(a.getCompletedItems()).as("check completedItems").isEqualTo(expected.getCompletedItems()))
            .satisfies(a -> assertThat(a.getIsCompleted()).as("check isCompleted").isEqualTo(expected.getIsCompleted()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCourseProgressUpdatableRelationshipsEquals(CourseProgress expected, CourseProgress actual) {
        assertThat(actual)
            .as("Verify CourseProgress relationships")
            .satisfies(a -> assertThat(a.getCourse()).as("check course").isEqualTo(expected.getCourse()));
    }
}
