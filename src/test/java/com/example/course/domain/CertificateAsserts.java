package com.example.course.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CertificateAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCertificateAllPropertiesEquals(Certificate expected, Certificate actual) {
        assertCertificateAutoGeneratedPropertiesEquals(expected, actual);
        assertCertificateAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCertificateAllUpdatablePropertiesEquals(Certificate expected, Certificate actual) {
        assertCertificateUpdatableFieldsEquals(expected, actual);
        assertCertificateUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCertificateAutoGeneratedPropertiesEquals(Certificate expected, Certificate actual) {
        assertThat(actual)
            .as("Verify Certificate auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCertificateUpdatableFieldsEquals(Certificate expected, Certificate actual) {
        assertThat(actual)
            .as("Verify Certificate relevant properties")
            .satisfies(a -> assertThat(a.getIssueDate()).as("check issueDate").isEqualTo(expected.getIssueDate()))
            .satisfies(a -> assertThat(a.getCertificateUrl()).as("check certificateUrl").isEqualTo(expected.getCertificateUrl()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCertificateUpdatableRelationshipsEquals(Certificate expected, Certificate actual) {
        assertThat(actual)
            .as("Verify Certificate relationships")
            .satisfies(a -> assertThat(a.getCourseProgress()).as("check courseProgress").isEqualTo(expected.getCourseProgress()));
    }
}
